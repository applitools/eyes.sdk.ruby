{
  "name": "@applitools/coverage-tests",
  "private": true,
  "version": "1.0.0",
  "engines": {
    "node": ">=10.0.0"
  },
  "main": "index.js",
  "description": "Coverage Tests for Applitools SDKs",
  "author": "Applitools <team@applitools.com>",
  "license": "SEE LICENSE IN LICENSE",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/applitools/sdk.coverage.tests.git"
  },
  "scripts": {
    "ruby": "yarn docker:start && yarn test; yarn docker:stop",
    "ruby:prod": "yarn && yarn test:prod",
    "ruby:ci": "yarn && bundle install && yarn ruby",
    "test": "yarn generate && yarn parallel:local && yarn report:merge && yarn report:sandbox",
    "test:prod": "[ \"TRAVIS_EVENT_TYPE\" = \"cron\" ] && yarn generate:noskip || yarn generate:eg && yarn parallel:eg && yarn report:merge && yarn report",
    "generate": "cd coverage_tests && coverage-tests generate ./configuration --pascalizeTests",
    "generate:local": "cd coverage_tests && coverage-tests generate ./configuration/local.js --pascalizeTests",
    "generate:eg": "cd coverage_tests && coverage-tests generate ./configuration/eg_configuration.js --pascalizeTests",
    "generate:noskip": "cd coverage_tests && coverage-tests generate ./configuration/eg_configuration.js --pascalizeTests -a",
    "report": "[ \"$TEST_REPORT_SANDBOX\" = \"False\" ] && yarn report:prod || yarn report:sandbox ",
    "report:sandbox": "cd coverage_tests && coverage-tests report ./configuration --sandbox$( [ -z $TRAVIS_COMMIT ] || echo \" --reportId $TRAVIS_COMMIT\" )",
    "report:prod": "cd coverage_tests && coverage-tests report ./configuration --reportId $TRAVIS_COMMIT",
    "run": "cd coverage_tests && APPLITOOLS_BATCH_NAME='Ruby Coverage Tests' APPLITOOLS_BATCH_ID=$(uuidgen) bundle exec rspec spec/coverage/generic",
    "run:debug": "cd coverage_tests && APPLITOOLS_BATCH_NAME='Ruby Coverage Tests' APPLITOOLS_BATCH_ID=$(uuidgen) APPLITOOLS_SHOW_LOGS='true' bundle exec rspec spec/coverage/generic",
    "run:parallel": "if [ -z \"$EXECUTION_GRID_URL\" ]; then yarn parallel:local; else yarn parallel:eg; fi",
    "parallel:local": "cd coverage_tests && APPLITOOLS_BATCH_NAME='Ruby Coverage Tests' APPLITOOLS_BATCH_ID=$(uuidgen) bundle exec parallel_rspec -n 6 spec/coverage/generic -i -s 'Native'",
    "parallel:eg": "cd coverage_tests && APPLITOOLS_BATCH_NAME='Ruby Coverage Tests' APPLITOOLS_BATCH_ID=$(uuidgen) bundle exec parallel_rspec -n 40 spec/coverage/generic -i -s 'Native'",
    "report:merge": "cd coverage_tests && junit-merge -d tmp -o coverage-test-report.xml",
    "docker:start": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "universal:debug": "eyes-universal --singleton --lazy"
  },
  "dependencies": {
    "@applitools/eyes-universal": "0.2.3",
    "@applitools/sdk-coverage-tests": "^2.3.17",
    "junit-merge": "^2.0.0",
    "@typescript-eslint/parser": "^2.14.0",
    "typescript": "^3.7.4"
  },
  "devDependencies": {
    "mocha": "^8.0.1"
  }
}
